
#一层成缆
#芯数  成缆系数
K_line_no1=[[1,1],
        [2,2],
        [3,2.16],
        [4,2.42],
        [5,2.7],
        [6,3],
        [7,3],
        [8,3.45],
        [9,3.6],
        [10,3.7],
       [11,4],
       [12,4.16],
       [13,4.41],
       [14,4.41],
       [15,4.7],
       [16,4.7],
       [17,5],
       [18,5],
       [19,5],
       [20,5.3],
       [21,5.3],
       [22,5.67],
       [23,5.67],
       [24,6],
       [25,6],
       [26,6],
       [27,6.15],
       [28,6.41],
       [29,6.41],
       [30,6.41],
       [31,6.7],
       [32,6.7],
       [33,6.7],
       [34,7],
       [35,7],
       [36,7],
       [37,7],
       [38,7.33],
       [39,7.33],
       [40,7.33],
       [41,7.67],
       [42,7.67],
       [43,7.67],
       [44,8],
       [45,8],
       [46,8],
       [47,8],
       [48,8.15],
       [52,8.41],
       [61,9]]
#非一层成缆
K_line_1=[[7,3.35],
          [8,3.66],
          [9,4],
          [10,4.44],
          [12,5],
          [18,7],
          ]
def get_K(spec_C_sum):
    """
    根据芯数获取成缆系数
    :param numbers: 芯数列表
    :return: 成缆系数
    """
    # 加判断一层成缆
    for item in K_line_no1:  # 遍历列表
        if item[0] == spec_C_sum[0]:
            return item[1]
        


